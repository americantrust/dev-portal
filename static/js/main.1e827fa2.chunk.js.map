{"version":3,"sources":["components/API.tsx","components/Search.tsx","components/Navigation.tsx","components/NotFound.tsx","components/StoplightProject.tsx","App.tsx","index.tsx"],"names":["StoplightAPI","_jsx","API","basePath","apiDescriptionUrl","Search","_ref","projectIds","search","setSearch","React","open","setOpen","data","useGetNodes","workspace","useGetWorkspace","_jsxs","_Fragment","children","placeholder","style","color","onFocus","ElementsSearch","onSearch","onClick","location","assign","concat","slug","onClose","handleClose","isOpen","searchResults","Navigation","className","NavLink","to","NotFound","StoplightProjectDocs","StoplightProject","platformUrl","projectId","App","Component","render","DevPortalProvider","BrowserRouter","Switch","Route","exact","path","Redirect","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"gUAKO,MAAMA,EAAyBA,IAElCC,cAACC,IAAG,CACFC,SAAS,WACTC,kBAAkB,iGCDXC,EAASC,IAAkC,IAAjC,WAAEC,GAAyBD,EAChD,MAAOE,EAAQC,GAAaC,WAAe,KACpCC,EAAMC,GAAWF,YAAe,IACjC,KAAEG,GAASC,YAAY,CAC3BN,SACAD,gBAEMM,KAAME,GAAcC,YAAgB,CAC1CT,eAkBF,OACEU,eAAAC,WAAA,CAAAC,SAAA,CACElB,cAAA,SAAOmB,YAAY,YAAYC,MAAO,CAAEC,MAAO,SAAWC,QAASA,IAAMX,GAAQ,KACjFX,cAACuB,IAAc,CACbhB,OAAQA,EACRiB,SAAUhB,EACViB,QAhBeb,IAEnBc,SAASC,OAAO,sBAADC,OAAuBhB,EAAKiB,MAAO,EAe9CC,QAtBcC,KAClBpB,GAAQ,GACRH,EAAU,GAAG,EAqBTwB,OAAQtB,EACRuB,cAAerB,MAEhB,ECxCMsB,EAAaA,IAEtBlB,eAAA,OAAKmB,UAAU,SAAQjB,SAAA,CAErBlB,cAACoC,IAAO,CAACC,GAAG,qBAAoBnB,SAAC,sBAEjClB,cAACoC,IAAO,CAACC,GAAG,YAAWnB,SAAC,aACxBlB,cAACI,EAAM,CAACE,WAAY,CAAC,uBCVdgC,EAAWA,IAEpBtC,cAAA,OAAAkB,SACElB,cAAA,KAAAkB,SAAG,kCCAIqB,EAAiCA,IACrCvC,cAACwC,IAAgB,CAACtC,SAAS,oBAAoBuC,YAAY,uBAAuBC,UAAU,mBCGrG,MAAMC,UAAYC,YAChBC,SACE,OACE7C,cAAC8C,IAAiB,CAAA5B,SAChBlB,cAAC+C,IAAa,CAAA7B,SACZF,eAAA,OAAKmB,UAAU,gBAAejB,SAAA,CAC5BlB,cAAA,UAAAkB,SACElB,cAACkC,EAAU,MAEblC,cAAA,QAAMmC,UAAU,eAAcjB,SAC5BF,eAACgC,IAAM,CAAA9B,SAAA,CACLlB,cAACiD,IAAK,CAACC,OAAK,EAACC,KAAK,IAAGjC,SACnBlB,cAACoD,IAAQ,CAACf,GAAG,yBAEfrC,cAACiD,IAAK,CAACE,KAAK,YAAYE,UAAWtD,IACnCC,cAACiD,IAAK,CAACE,KAAK,qBAAqBE,UAAWd,IAC5CvC,cAACiD,IAAK,CAACI,UAAWf,eAOhC,EAGaK,QC5BfW,IAAST,OACP7C,cAACS,IAAM8C,WAAU,CAAArC,SACflB,cAAC2C,EAAG,MAENa,SAASC,eAAe,Q","file":"static/js/main.1e827fa2.chunk.js","sourcesContent":["import '@stoplight/elements/styles.min.css';\n\nimport { API } from '@stoplight/elements';\nimport React from 'react';\n\nexport const StoplightAPI: React.FC = () => {\n  return (\n    <API\n      basePath=\"zoom-api\"\n      apiDescriptionUrl=\"https://raw.githubusercontent.com/stoplightio/Public-APIs/master/reference/zoom/openapi.yaml\"\n    />\n  );\n};\n","import type { NodeSearchResult } from '@stoplight/elements-dev-portal';\nimport { Search as ElementsSearch, useGetNodes, useGetWorkspace } from '@stoplight/elements-dev-portal';\nimport * as React from 'react';\n\nexport type SearchProps = {\n  projectIds: string[];\n};\n\nexport const Search = ({ projectIds }: SearchProps) => {\n  const [search, setSearch] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n  const { data } = useGetNodes({\n    search,\n    projectIds,\n  });\n  const { data: workspace } = useGetWorkspace({\n    projectIds,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n    setSearch('');\n  };\n\n  const handleClick = (data: NodeSearchResult) => {\n\n    location.assign(`/stoplight-project/${data.slug}`);\n    //window.location.href = `/stoplight-project/${data.slug}`;\n    \n    // console.log(data);\n    // window.location.href = `https://${workspace?.workspace.slug}.stoplight.io/docs/${data.project_slug}${data.uri}`;\n    // window.location.href = `http://192.168.68.106:3000.stoplight.io/docs/${data.project_slug}${data.uri}`;\n  };\n\n  return (\n    <>\n      <input placeholder=\"Search...\" style={{ color: 'white' }} onFocus={() => setOpen(true)} />\n      <ElementsSearch\n        search={search}\n        onSearch={setSearch}\n        onClick={handleClick}\n        onClose={handleClose}\n        isOpen={open}\n        searchResults={data}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { Search } from './Search';\n\nexport const Navigation = () => {\n  return (\n    <nav className=\"topnav\">\n      {/* @ts-ignore */}\n      <NavLink to=\"/stoplight-project\">Stoplight Project</NavLink>\n      {/* @ts-ignore */}\n      <NavLink to=\"/zoom-api\">Zoom API</NavLink>\n      <Search projectIds={['cHJqOjIzNzgwMw']} />\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const NotFound = () => {\n  return (\n    <div>\n      <p>Error: Page does not exist!</p>\n    </div>\n  );\n};\n","import '@stoplight/elements/styles.min.css';\n\nimport { StoplightProject } from '@stoplight/elements-dev-portal';\nimport React from 'react';\n\nexport const StoplightProjectDocs: React.FC = () => {\n  return <StoplightProject basePath=\"stoplight-project\" platformUrl=\"https://stoplight.io\" projectId=\"cHJqOjIzNzgwMw\" />;\n};\n","import { DevPortalProvider } from '@stoplight/elements-dev-portal';\nimport React, { Component } from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\n\nimport { StoplightAPI } from './components/API';\nimport { Navigation } from './components/Navigation';\nimport { NotFound } from './components/NotFound';\nimport { StoplightProjectDocs } from './components/StoplightProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <DevPortalProvider>\n        <BrowserRouter>\n          <div className=\"app-container\">\n            <header>\n              <Navigation />\n            </header>\n            <main className=\"main-content\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Redirect to=\"/stoplight-project\" />\n                </Route>\n                <Route path=\"/zoom-api\" component={StoplightAPI} />\n                <Route path=\"/stoplight-project\" component={StoplightProjectDocs} />\n                <Route component={NotFound} />\n              </Switch>\n            </main>\n          </div>\n        </BrowserRouter>\n      </DevPortalProvider>\n    );\n  }\n}\n\nexport default App;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}